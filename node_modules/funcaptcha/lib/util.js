"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const crypto = require('crypto');
const DEFAULT_USER_AGENT = "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/103.0.5060.134 Safari/537.36";
let apiBreakers = {
    default: (c) => {
        return {
            px: (c[0] / 300).toFixed(2),
            py: (c[1] / 200).toFixed(2),
            x: c[0],
            y: c[1],
        };
    },
    method_1: (c) => {
        return { x: c[1], y: c[0] };
    },
    method_2: (c) => {
        return { x: c[0], y: (c[1] + c[0]) * c[0] };
    },
    method_3: (c) => {
        return { a: c[0], b: c[1] };
    },
    method_4: (c) => {
        return [c[0], c[1]];
    },
    method_5: (c) => {
        return [c[1], c[0]].map((v) => Math.sqrt(v));
    },
};
function tileToLoc(tile) {
    return [
        (tile % 3) * 100 +
            (tile % 3) * 3 +
            3 +
            10 +
            Math.floor(Math.random() * 80),
        Math.floor(tile / 3) * 100 +
            Math.floor(tile / 3) * 3 +
            3 +
            10 +
            Math.floor(Math.random() * 80),
    ];
}
function constructFormData(data) {
    return Object.keys(data)
        .filter((v) => data[v] !== undefined)
        .map((k) => `${k}=${encodeURIComponent(data[k])}`)
        .join("&");
}
function random() {
    return Array(32)
        .fill(0)
        .map(() => "0123456789abcdef"[Math.floor(Math.random() * 16)])
        .join("");
}
function getBda(userAgent) {
    // var request = httpSync.request({
    //     method: 'GET',
    //     headers: {},
    //     body: '',
    //     protocol: 'http',
    //     host: '174.114.200.242',
    //     port: 1337, //443 if protocol = https
    //     path: '/'
    // });
    // var response = request.end();
    // return response;
    return "";
}
exports.default = {
    DEFAULT_USER_AGENT,
    tileToLoc,
    constructFormData,
    getBda,
    apiBreakers,
};
